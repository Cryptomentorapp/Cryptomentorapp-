import 'package:flutter/material.dart'; import 'package:http/http.dart' as http; import 'package:xml/xml.dart' as xml; class NewsPage extends StatefulWidget{ const NewsPage({super.key}); @override State<NewsPage> createState()=>_N(); } class _N extends State<NewsPage>{ List<_I> items=[]; bool loading=false; String? error; @override void initState(){ super.initState(); fetch(); } Future<void> fetch() async{ setState(()=>loading=true); try{ final urls=['https://cryptopanic.com/rss/','https://cointelegraph.com/rss']; final all=<_I>[]; for(final u in urls){ final r=await http.get(Uri.parse(u)); if(r.statusCode==200){ final doc=xml.XmlDocument.parse(r.body); for(final it in doc.findAllElements('item')){ all.add(_I(it.getElement('title')?.text ?? '', it.getElement('link')?.text ?? '', it.getElement('pubDate')?.text ?? '')); } } } all.sort((a,b)=>b.date.compareTo(a.date)); items=all.take(60).toList(); error=null; } catch(e){ error=e.toString(); } setState(()=>loading=false); } @override Widget build(BuildContext c){ if(loading) return const Center(child:CircularProgressIndicator()); if(error!=null) return Center(child: Text('Error: '+error!)); return RefreshIndicator(onRefresh: fetch, child: ListView.separated(padding: const EdgeInsets.all(12), itemCount: items.length, itemBuilder:(_,i){ final it=items[i]; return ListTile(title: Text(it.title), subtitle: Text(it.date), trailing: const Icon(Icons.open_in_new)); }, separatorBuilder:(_,__)=>const Divider(height:1))); } } class _I{ final String title, link, date; _I(this.title,this.link,this.date); }